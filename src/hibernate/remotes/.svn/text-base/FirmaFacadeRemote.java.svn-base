package hibernate.remotes;

import hibernate.entities.Firma;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for FirmaFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface FirmaFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved Firma entity. All
	 * subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            Firma entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(Firma entity);

	/**
	 * Delete a persistent Firma entity.
	 * 
	 * @param entity
	 *            Firma entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(Firma entity);

	/**
	 * Persist a previously saved Firma entity and return it or a copy of it to
	 * the sender. A copy of the Firma entity parameter is returned when the JPA
	 * persistence mechanism has not previously been tracking the updated
	 * entity.
	 * 
	 * @param entity
	 *            Firma entity to update
	 * @return Firma the persisted Firma entity instance, may not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public Firma update(Firma entity);

	public Firma findById(Integer id);
	
	public Firma findFullById(Integer id);

	/**
	 * Find all Firma entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the Firma property to query
	 * @param value
	 *            the property value to match
	 * @return List<Firma> found by query
	 */
	public List<Firma> findByProperty(String propertyName, Object value);

	public List<Firma> findByNazivFirme(Object nazivFirme);

	public List<Firma> findByOpisFirme(Object opisFirme);

	public List<Firma> findByPibFirme(Object pibFirme);

	public List<Firma> findByMaticniBrojFirme(Object maticniBrojFirme);

	public List<Firma> findByImeVlasnikaFirme(Object imeVlasnikaFirme);

	public List<Firma> findByPrezimeVlasnikaFirme(Object prezimeVlasnikaFirme);

	public List<Firma> findByVerzija(Object verzija);

	/**
	 * Find all Firma entities.
	 * 
	 * @return List<Firma> all Firma entities
	 */
	public List<Firma> findAll();
}