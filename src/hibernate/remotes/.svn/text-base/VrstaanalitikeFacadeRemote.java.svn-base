package hibernate.remotes;

import hibernate.entities.Vrstaanalitike;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for VrstaanalitikeFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface VrstaanalitikeFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved Vrstaanalitike entity.
	 * All subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            Vrstaanalitike entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(Vrstaanalitike entity);

	/**
	 * Delete a persistent Vrstaanalitike entity.
	 * 
	 * @param entity
	 *            Vrstaanalitike entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(Vrstaanalitike entity);

	/**
	 * Persist a previously saved Vrstaanalitike entity and return it or a copy
	 * of it to the sender. A copy of the Vrstaanalitike entity parameter is
	 * returned when the JPA persistence mechanism has not previously been
	 * tracking the updated entity.
	 * 
	 * @param entity
	 *            Vrstaanalitike entity to update
	 * @return Vrstaanalitike the persisted Vrstaanalitike entity instance, may
	 *         not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public Vrstaanalitike update(Vrstaanalitike entity);

	public Vrstaanalitike findById(Integer id);

	/**
	 * Find all Vrstaanalitike entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the Vrstaanalitike property to query
	 * @param value
	 *            the property value to match
	 * @return List<Vrstaanalitike> found by query
	 */
	public List<Vrstaanalitike> findByProperty(String propertyName, Object value);

	public List<Vrstaanalitike> findByNazivVrAnalitike(Object nazivVrAnalitike);

	public List<Vrstaanalitike> findByOpisVrAnalitike(Object opisVrAnalitike);

	public List<Vrstaanalitike> findByVerzija(Object verzija);

	/**
	 * Find all Vrstaanalitike entities.
	 * 
	 * @return List<Vrstaanalitike> all Vrstaanalitike entities
	 */
	public List<Vrstaanalitike> findAll();
}