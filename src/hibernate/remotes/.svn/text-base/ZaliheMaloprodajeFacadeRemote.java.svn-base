package hibernate.remotes;

import hibernate.entities.ZaliheMaloprodaje;
import hibernate.entities.ZaliheMaloprodajeId;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for ZaliheMaloprodajeFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface ZaliheMaloprodajeFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved ZaliheMaloprodaje entity.
	 * All subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            ZaliheMaloprodaje entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(ZaliheMaloprodaje entity);

	/**
	 * Delete a persistent ZaliheMaloprodaje entity.
	 * 
	 * @param entity
	 *            ZaliheMaloprodaje entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(ZaliheMaloprodaje entity);

	/**
	 * Persist a previously saved ZaliheMaloprodaje entity and return it or a
	 * copy of it to the sender. A copy of the ZaliheMaloprodaje entity
	 * parameter is returned when the JPA persistence mechanism has not
	 * previously been tracking the updated entity.
	 * 
	 * @param entity
	 *            ZaliheMaloprodaje entity to update
	 * @return ZaliheMaloprodaje the persisted ZaliheMaloprodaje entity
	 *         instance, may not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public ZaliheMaloprodaje update(ZaliheMaloprodaje entity);

	public ZaliheMaloprodaje findById(ZaliheMaloprodajeId id);

	/**
	 * Find all ZaliheMaloprodaje entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the ZaliheMaloprodaje property to query
	 * @param value
	 *            the property value to match
	 * @return List<ZaliheMaloprodaje> found by query
	 */
	public List<ZaliheMaloprodaje> findByProperty(String propertyName,
			Object value);

	public List<ZaliheMaloprodaje> findByKolicinaProizvodaMp(
			Object kolicinaProizvodaMp);

	/**
	 * Find all ZaliheMaloprodaje entities.
	 * 
	 * @return List<ZaliheMaloprodaje> all ZaliheMaloprodaje entities
	 */
	public List<ZaliheMaloprodaje> findAll();
}