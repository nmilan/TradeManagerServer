package hibernate.remotes;

import hibernate.entities.Familijaproizvoda;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for FamilijaproizvodaFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface FamilijaproizvodaFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved Familijaproizvoda entity.
	 * All subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            Familijaproizvoda entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(Familijaproizvoda entity);

	/**
	 * Delete a persistent Familijaproizvoda entity.
	 * 
	 * @param entity
	 *            Familijaproizvoda entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(Familijaproizvoda entity);

	/**
	 * Persist a previously saved Familijaproizvoda entity and return it or a
	 * copy of it to the sender. A copy of the Familijaproizvoda entity
	 * parameter is returned when the JPA persistence mechanism has not
	 * previously been tracking the updated entity.
	 * 
	 * @param entity
	 *            Familijaproizvoda entity to update
	 * @return Familijaproizvoda the persisted Familijaproizvoda entity
	 *         instance, may not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public Familijaproizvoda update(Familijaproizvoda entity);

	public Familijaproizvoda findById(Integer id);

	/**
	 * Find all Familijaproizvoda entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the Familijaproizvoda property to query
	 * @param value
	 *            the property value to match
	 * @return List<Familijaproizvoda> found by query
	 */
	public List<Familijaproizvoda> findByProperty(String propertyName,
			Object value);

	public List<Familijaproizvoda> findByNazivFamilije(Object nazivFamilije);

	public List<Familijaproizvoda> findByOpisFamilije(Object opisFamilije);

	public List<Familijaproizvoda> findByVerzija(Object verzija);

	/**
	 * Find all Familijaproizvoda entities.
	 * 
	 * @return List<Familijaproizvoda> all Familijaproizvoda entities
	 */
	public List<Familijaproizvoda> findAll();
}