package hibernate.remotes;

import hibernate.entities.MaloprodajniObjekat;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for MaloprodajniObjekatFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface MaloprodajniObjekatFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved MaloprodajniObjekat
	 * entity. All subsequent persist actions of this entity should use the
	 * #update() method.
	 * 
	 * @param entity
	 *            MaloprodajniObjekat entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(MaloprodajniObjekat entity);

	/**
	 * Delete a persistent MaloprodajniObjekat entity.
	 * 
	 * @param entity
	 *            MaloprodajniObjekat entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(MaloprodajniObjekat entity);

	/**
	 * Persist a previously saved MaloprodajniObjekat entity and return it or a
	 * copy of it to the sender. A copy of the MaloprodajniObjekat entity
	 * parameter is returned when the JPA persistence mechanism has not
	 * previously been tracking the updated entity.
	 * 
	 * @param entity
	 *            MaloprodajniObjekat entity to update
	 * @return MaloprodajniObjekat the persisted MaloprodajniObjekat entity
	 *         instance, may not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public MaloprodajniObjekat update(MaloprodajniObjekat entity);

	public MaloprodajniObjekat findById(Integer id);

	/**
	 * Find all MaloprodajniObjekat entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the MaloprodajniObjekat property to query
	 * @param value
	 *            the property value to match
	 * @return List<MaloprodajniObjekat> found by query
	 */
	public List<MaloprodajniObjekat> findByProperty(String propertyName,
			Object value);

	public List<MaloprodajniObjekat> findByNazivMaloprodaje(
			Object nazivMaloprodaje);

	public List<MaloprodajniObjekat> findByRadnoVremeMp(Object radnoVremeMp);

	/**
	 * Find all MaloprodajniObjekat entities.
	 * 
	 * @return List<MaloprodajniObjekat> all MaloprodajniObjekat entities
	 */
	public List<MaloprodajniObjekat> findAll();
}