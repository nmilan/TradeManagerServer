package hibernate.remotes;

import hibernate.entities.Zarada;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for ZaradaFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface ZaradaFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved Zarada entity. All
	 * subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            Zarada entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(Zarada entity);

	/**
	 * Delete a persistent Zarada entity.
	 * 
	 * @param entity
	 *            Zarada entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(Zarada entity);

	/**
	 * Persist a previously saved Zarada entity and return it or a copy of it to
	 * the sender. A copy of the Zarada entity parameter is returned when the
	 * JPA persistence mechanism has not previously been tracking the updated
	 * entity.
	 * 
	 * @param entity
	 *            Zarada entity to update
	 * @return Zarada the persisted Zarada entity instance, may not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public Zarada update(Zarada entity);

	public Zarada findById(Integer id);

	/**
	 * Find all Zarada entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the Zarada property to query
	 * @param value
	 *            the property value to match
	 * @return List<Zarada> found by query
	 */
	public List<Zarada> findByProperty(String propertyName, Object value);

	public List<Zarada> findByMesecniZaradjeniSati(Object mesecniZaradjeniSati);

	public List<Zarada> findByMesecniProcentualnaOsnovica(
			Object mesecniProcentualnaOsnovica);

	public List<Zarada> findByMesecnaZaradaPoSatu(Object mesecnaZaradaPoSatu);

	public List<Zarada> findByMesecniProcenatZarade(Object mesecniProcenatZarade);

	public List<Zarada> findByProknjizenaZarada(Object proknjizenaZarada);

	public List<Zarada> findByVerzija(Object verzija);

	/**
	 * Find all Zarada entities.
	 * 
	 * @return List<Zarada> all Zarada entities
	 */
	public List<Zarada> findAll();
}