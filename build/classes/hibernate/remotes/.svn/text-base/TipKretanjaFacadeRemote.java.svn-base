package hibernate.remotes;

import hibernate.entities.TipKretanja;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for TipKretanjaFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface TipKretanjaFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved TipKretanja entity. All
	 * subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            TipKretanja entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(TipKretanja entity);

	/**
	 * Delete a persistent TipKretanja entity.
	 * 
	 * @param entity
	 *            TipKretanja entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(TipKretanja entity);

	/**
	 * Persist a previously saved TipKretanja entity and return it or a copy of
	 * it to the sender. A copy of the TipKretanja entity parameter is returned
	 * when the JPA persistence mechanism has not previously been tracking the
	 * updated entity.
	 * 
	 * @param entity
	 *            TipKretanja entity to update
	 * @return TipKretanja the persisted TipKretanja entity instance, may not be
	 *         the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public TipKretanja update(TipKretanja entity);

	public TipKretanja findById(Integer id);

	/**
	 * Find all TipKretanja entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the TipKretanja property to query
	 * @param value
	 *            the property value to match
	 * @return List<TipKretanja> found by query
	 */
	public List<TipKretanja> findByProperty(String propertyName, Object value);

	public List<TipKretanja> findByNazivTipaKretanja(Object nazivTipaKretanja);

	public List<TipKretanja> findByVrednostKretanja(Object vrednostKretanja);

	public List<TipKretanja> findByOpisKretanja(Object opisKretanja);

	/**
	 * Find all TipKretanja entities.
	 * 
	 * @return List<TipKretanja> all TipKretanja entities
	 */
	public List<TipKretanja> findAll();
}