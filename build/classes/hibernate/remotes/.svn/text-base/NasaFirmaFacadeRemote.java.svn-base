package hibernate.remotes;

import hibernate.entities.NasaFirma;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for NasaFirmaFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface NasaFirmaFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved NasaFirma entity. All
	 * subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            NasaFirma entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(NasaFirma entity);

	/**
	 * Delete a persistent NasaFirma entity.
	 * 
	 * @param entity
	 *            NasaFirma entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(NasaFirma entity);

	/**
	 * Persist a previously saved NasaFirma entity and return it or a copy of it
	 * to the sender. A copy of the NasaFirma entity parameter is returned when
	 * the JPA persistence mechanism has not previously been tracking the
	 * updated entity.
	 * 
	 * @param entity
	 *            NasaFirma entity to update
	 * @return NasaFirma the persisted NasaFirma entity instance, may not be the
	 *         same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public NasaFirma update(NasaFirma entity);

	public NasaFirma findById(Integer id);

	/**
	 * Find all NasaFirma entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the NasaFirma property to query
	 * @param value
	 *            the property value to match
	 * @return List<NasaFirma> found by query
	 */
	public List<NasaFirma> findByProperty(String propertyName, Object value);

	public List<NasaFirma> findByNazivNaseFirme(Object nazivNaseFirme);

	public List<NasaFirma> findByOpisNaseFirme(Object opisNaseFirme);

	public List<NasaFirma> findByPibNaseFirme(Object pibNaseFirme);

	public List<NasaFirma> findByMaticniBrojNaseFirme(
			Object maticniBrojNaseFirme);

	public List<NasaFirma> findByImeVlasnikaNaseFirme(
			Object imeVlasnikaNaseFirme);

	public List<NasaFirma> findByPrezimeVlasnikaNaseFirme(
			Object prezimeVlasnikaNaseFirme);

	public List<NasaFirma> findByLogoUrl(Object logoUrl);

	public List<NasaFirma> findByVerzija(Object verzija);

	/**
	 * Find all NasaFirma entities.
	 * 
	 * @return List<NasaFirma> all NasaFirma entities
	 */
	public List<NasaFirma> findAll();
}