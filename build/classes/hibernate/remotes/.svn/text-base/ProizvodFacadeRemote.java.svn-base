package hibernate.remotes;

import hibernate.entities.Proizvod;
import hibernate.entities.ProizvodId;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for ProizvodFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface ProizvodFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved Proizvod entity. All
	 * subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            Proizvod entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(Proizvod entity);

	/**
	 * Delete a persistent Proizvod entity.
	 * 
	 * @param entity
	 *            Proizvod entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(Proizvod entity);

	/**
	 * Persist a previously saved Proizvod entity and return it or a copy of it
	 * to the sender. A copy of the Proizvod entity parameter is returned when
	 * the JPA persistence mechanism has not previously been tracking the
	 * updated entity.
	 * 
	 * @param entity
	 *            Proizvod entity to update
	 * @return Proizvod the persisted Proizvod entity instance, may not be the
	 *         same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public Proizvod update(Proizvod entity);

	public Proizvod findById(ProizvodId id);

	/**
	 * Find all Proizvod entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the Proizvod property to query
	 * @param value
	 *            the property value to match
	 * @return List<Proizvod> found by query
	 */
	public List<Proizvod> findByProperty(String propertyName, Object value);

	public List<Proizvod> findBySifraProzivoda(Object sifraProzivoda);

	public List<Proizvod> findByNazivProizvoda(Object nazivProizvoda);

	public List<Proizvod> findByOpisProizvoda(Object opisProizvoda);

	public List<Proizvod> findByMpCenaProizvoda(Object mpCenaProizvoda);

	public List<Proizvod> findByVpCenaProizvoda(Object vpCenaProizvoda);

	public List<Proizvod> findByJedincaMereUpakovanju(
			Object jedincaMereUpakovanju);

	public List<Proizvod> findByUrlSlike(Object urlSlike);

	public List<Proizvod> findByVerzija(Object verzija);

	/**
	 * Find all Proizvod entities.
	 * 
	 * @return List<Proizvod> all Proizvod entities
	 */
	public List<Proizvod> findAll();
}