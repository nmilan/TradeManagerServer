package hibernate.remotes;

import hibernate.entities.Grupaproizvoda;
import hibernate.entities.GrupaproizvodaId;

import java.util.List;

import javax.ejb.Remote;

/**
 * Remote interface for GrupaproizvodaFacade.
 * 
 * @author MyEclipse Persistence Tools
 */
@Remote
public interface GrupaproizvodaFacadeRemote {
	/**
	 * Perform an initial save of a previously unsaved Grupaproizvoda entity.
	 * All subsequent persist actions of this entity should use the #update()
	 * method.
	 * 
	 * @param entity
	 *            Grupaproizvoda entity to persist
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void save(Grupaproizvoda entity);

	/**
	 * Delete a persistent Grupaproizvoda entity.
	 * 
	 * @param entity
	 *            Grupaproizvoda entity to delete
	 * @throws RuntimeException
	 *             when the operation fails
	 */
	public void delete(Grupaproizvoda entity);

	/**
	 * Persist a previously saved Grupaproizvoda entity and return it or a copy
	 * of it to the sender. A copy of the Grupaproizvoda entity parameter is
	 * returned when the JPA persistence mechanism has not previously been
	 * tracking the updated entity.
	 * 
	 * @param entity
	 *            Grupaproizvoda entity to update
	 * @return Grupaproizvoda the persisted Grupaproizvoda entity instance, may
	 *         not be the same
	 * @throws RuntimeException
	 *             if the operation fails
	 */
	public Grupaproizvoda update(Grupaproizvoda entity);

	public Grupaproizvoda findById(GrupaproizvodaId id);

	/**
	 * Find all Grupaproizvoda entities with a specific property value.
	 * 
	 * @param propertyName
	 *            the name of the Grupaproizvoda property to query
	 * @param value
	 *            the property value to match
	 * @return List<Grupaproizvoda> found by query
	 */
	public List<Grupaproizvoda> findByProperty(String propertyName, Object value);

	public List<Grupaproizvoda> findByNazivGrupe(Object nazivGrupe);

	public List<Grupaproizvoda> findByOpisGrupe(Object opisGrupe);

	public List<Grupaproizvoda> findByVerzija(Object verzija);

	/**
	 * Find all Grupaproizvoda entities.
	 * 
	 * @return List<Grupaproizvoda> all Grupaproizvoda entities
	 */
	public List<Grupaproizvoda> findAll();
}